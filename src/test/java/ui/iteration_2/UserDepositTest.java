package ui.iteration_2;

import api.models.AccountInfoResponse;
import api.models.AddDepositRequest;
import api.models.CreateUserRequest;
import api.models.LoginUserRequest;
import api.requests.skelethon.Endpoint;
import api.requests.skelethon.requesters.CrudRequester;
import api.requests.steps.AdminSteps;
import api.requests.steps.UserSteps;
import api.specs.RequestSpecs;
import api.specs.ResponseSpecs;
import com.codeborne.selenide.Configuration;
import com.codeborne.selenide.Selenide;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.Alert;
import org.openqa.selenium.chrome.ChromeOptions;

import static com.codeborne.selenide.Selectors.byText;
import static com.codeborne.selenide.Selenide.*;
import static io.restassured.RestAssured.given;
import static org.assertj.core.api.Assertions.assertThat;

public class UserDepositTest {
    @BeforeAll
    public static void setUp() {
        Configuration.browser = "chrome";
        Configuration.browserSize = "1920x1080";
        Configuration.headless = false;
        Configuration.baseUrl = "http://localhost:3000";
        Configuration.timeout = 10000; // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π

        ChromeOptions chromeOptions = new ChromeOptions();
        chromeOptions.addArguments("--no-sandbox", "--disable-dev-shm-usage", "--disable-gpu");
        Configuration.browserCapabilities = chromeOptions;
    }

    // –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç 1
    @Test
    public void userWithOneAccountCanDepositCorrectSumTest(){
        // –®–ê–ì–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
        // –®–ê–ì 1: –ê–¥–º–∏–Ω –ª–æ–≥–∏–Ω–∏—Ç—Å—è –≤ –±–∞–Ω–∫–µ
        // –®–ê–ì 2: –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        CreateUserRequest user = AdminSteps.createUser();

        // –®–ê–ì 3: –Æ–∑–µ—Ä –ª–æ–≥–∏–Ω–∏—Ç—Å—è –≤ –±–∞–Ω–∫–µ
        String userAuthHeader = new CrudRequester(
                RequestSpecs.unauthSpec(),
                Endpoint.LOGIN,
                ResponseSpecs.requestReturnsOK())
                .post(LoginUserRequest.builder()
                        .username(user.getUsername())
                        .password(user.getPassword()).build())
                .extract()
                .header("Authorization");

        Selenide.open("/");

        executeJavaScript("localStorage.setItem('authToken', arguments[0]);", userAuthHeader);

        // –®A–ì 4: –Æ–∑–µ—Ä —Å–æ–∑–¥–∞–µ—Ç —Å—á–µ—Ç
        AccountInfoResponse account = UserSteps.createAccount(user);
        // –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞
        AddDepositRequest deposit = UserSteps.generateDepositSum(account);
        String depositAmount = String.valueOf(deposit.getBalance()); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É

        // –®–ê–ì–ò –¢–ï–°–¢–ê:
        // –®–ê–ì 6: –Æ–∑–µ—Ä –∫–ª–∞–¥–µ—Ç –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç
        Selenide.open("/dashboard");
        $(byText("\uD83D\uDCB0 Deposit Money")).click();
        $(".form-control.account-selector").click(); // –æ—Ç–∫—Ä—ã–≤–∞—é –¥—Ä–æ–ø–¥–∞—É–Ω

        $$("select.account-selector option").get(1).click(); // –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞

        $("input.form-control.deposit-input[type='number']").setValue(depositAmount);

        $(byText("üíµ Deposit")).click();

        // –®–ê–ì 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ ui —á—Ç–æ –¥–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–∏–ª–∏—Å—å –Ω–∞ —Å—á–µ—Ç
        Alert alert = switchTo().alert(); // –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –≤ –æ–∫–Ω–æ –∞–ª–µ—Ä—Ç–∞
        String alertText = alert.getText(); // —Å—á–∏—Ç–∞–ª–∏ –æ—Ç—Ç—É–¥–∞ —Ç–µ–∫—Å—Ç –∏ –∑–∞–ø–æ–º–Ω–∏–ª–∏ –µ–≥–æ
        assertThat(alertText).contains("‚úÖ Successfully deposited $" + deposit.getBalance() + " to account "); // –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        alert.accept(); // –∑–∞–∫—Ä—ã–ª–∏ –æ–∫–Ω–æ –∞–ª–µ—Ä—Ç–∞

        // –®–ê–ì 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ api —á—Ç–æ –¥–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–∏–ª–∏—Å—å –Ω–∞ —Å—á–µ—Ç
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —é–∑–µ—Ä–∞
        AccountInfoResponse[] existingUserAccounts = given()
                .spec(RequestSpecs.authAsUserSpec(user.getUsername(), user.getPassword()))
                .get("http://localhost:4111/api/v1/customer/accounts")
                .then().assertThat()
                .extract().as(AccountInfoResponse[].class);

        AccountInfoResponse accountWithDeposit = existingUserAccounts[0]; // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
        Assertions.assertEquals(deposit.getBalance(), accountWithDeposit.getBalance(),"–ë–∞–ª–∞–Ω—Å –≤ API –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–º –≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞
    }

    // –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç 2
    @Test
    public void userWithSeveralAccountsCanDepositCorrectSumTest(){
        // –®–ê–ì–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
        // –®–ê–ì 1: –ê–¥–º–∏–Ω –ª–æ–≥–∏–Ω–∏—Ç—Å—è –≤ –±–∞–Ω–∫–µ
        // –®–ê–ì 2: –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        CreateUserRequest user = AdminSteps.createUser();

        // –®–ê–ì 3: –Æ–∑–µ—Ä –ª–æ–≥–∏–Ω–∏—Ç—Å—è –≤ –±–∞–Ω–∫–µ
        String userAuthHeader = new CrudRequester(
                RequestSpecs.unauthSpec(),
                Endpoint.LOGIN,
                ResponseSpecs.requestReturnsOK())
                .post(LoginUserRequest.builder()
                        .username(user.getUsername())
                        .password(user.getPassword()).build())
                .extract()
                .header("Authorization");

        Selenide.open("/");

        executeJavaScript("localStorage.setItem('authToken', arguments[0]);", userAuthHeader);

        // –®A–ì 4: –Æ–∑–µ—Ä —Å–æ–∑–¥–∞–µ—Ç —Å—á–µ—Ç–∞
        AccountInfoResponse account1 = UserSteps.createAccount(user);
        AccountInfoResponse account2 = UserSteps.createAccount(user);
        AccountInfoResponse account3 = UserSteps.createAccount(user);

        // –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞
        AddDepositRequest deposit = UserSteps.generateDepositSum(account2);
        String depositAmount = String.valueOf(deposit.getBalance()); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É

        // –®–ê–ì–ò –¢–ï–°–¢–ê:
        // –®–ê–ì 6: –Æ–∑–µ—Ä –∫–ª–∞–¥–µ—Ç –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç
        Selenide.open("/dashboard");
        $(byText("\uD83D\uDCB0 Deposit Money")).click();
        $(".form-control.account-selector").click(); // –æ—Ç–∫—Ä—ã–≤–∞—é –¥—Ä–æ–ø–¥–∞—É–Ω

        $$("select.account-selector option").get(2).click(); // –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞

        $("input.form-control.deposit-input[type='number']").setValue(depositAmount);

        $(byText("üíµ Deposit")).click();

        // –®–ê–ì 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ ui —á—Ç–æ –¥–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–∏–ª–∏—Å—å –Ω–∞ —Å—á–µ—Ç
        Alert alert = switchTo().alert(); // –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –≤ –æ–∫–Ω–æ –∞–ª–µ—Ä—Ç–∞
        String alertText = alert.getText(); // —Å—á–∏—Ç–∞–ª–∏ –æ—Ç—Ç—É–¥–∞ —Ç–µ–∫—Å—Ç –∏ –∑–∞–ø–æ–º–Ω–∏–ª–∏ –µ–≥–æ
        assertThat(alertText).contains("‚úÖ Successfully deposited $" + deposit.getBalance() + " to account "); // –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        alert.accept(); // –∑–∞–∫—Ä—ã–ª–∏ –æ–∫–Ω–æ –∞–ª–µ—Ä—Ç–∞

        // –®–ê–ì 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ api —á—Ç–æ –¥–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–∏–ª–∏—Å—å –Ω–∞ —Å—á–µ—Ç
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —é–∑–µ—Ä–∞
        AccountInfoResponse[] existingUserAccounts = given()
                .spec(RequestSpecs.authAsUserSpec(user.getUsername(), user.getPassword()))
                .get("http://localhost:4111/api/v1/customer/accounts")
                .then().assertThat()
                .extract().as(AccountInfoResponse[].class);

        AccountInfoResponse accountWithDeposit = existingUserAccounts[1]; // –ë–µ—Ä–µ–º –í–¢–û–†–û–ô –∞–∫–∫–∞—É–Ω—Ç
        Assertions.assertEquals(deposit.getBalance(), accountWithDeposit.getBalance(),"–ë–∞–ª–∞–Ω—Å –≤ API –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–º –≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞
    }

    // –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç 1
    @Test
    public void userWithOneAccountCanNotDepositIncorrectSumTest(){
        // –®–ê–ì–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
        // –®–ê–ì 1: –ê–¥–º–∏–Ω –ª–æ–≥–∏–Ω–∏—Ç—Å—è –≤ –±–∞–Ω–∫–µ
        // –®–ê–ì 2: –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        CreateUserRequest user = AdminSteps.createUser();

        // –®–ê–ì 3: –Æ–∑–µ—Ä –ª–æ–≥–∏–Ω–∏—Ç—Å—è –≤ –±–∞–Ω–∫–µ
        String userAuthHeader = new CrudRequester(
                RequestSpecs.unauthSpec(),
                Endpoint.LOGIN,
                ResponseSpecs.requestReturnsOK())
                .post(LoginUserRequest.builder()
                        .username(user.getUsername())
                        .password(user.getPassword()).build())
                .extract()
                .header("Authorization");

        Selenide.open("/");

        executeJavaScript("localStorage.setItem('authToken', arguments[0]);", userAuthHeader);

        // –®A–ì 4: –Æ–∑–µ—Ä —Å–æ–∑–¥–∞–µ—Ç —Å—á–µ—Ç
        AccountInfoResponse account = UserSteps.createAccount(user);

        // –®–ê–ì–ò –¢–ï–°–¢–ê:
        // –®–ê–ì 6: –Æ–∑–µ—Ä –∫–ª–∞–¥–µ—Ç –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç
        Selenide.open("/dashboard");
        $(byText("\uD83D\uDCB0 Deposit Money")).click();
        $(".form-control.account-selector").click(); // –æ—Ç–∫—Ä—ã–≤–∞—é –¥—Ä–æ–ø–¥–∞—É–Ω

        $$("select.account-selector option").get(1).click(); // –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞

        $("input.form-control.deposit-input[type='number']").setValue("-1000");

        $(byText("üíµ Deposit")).click();

        // –®–ê–ì 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ ui —á—Ç–æ –¥–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–∏–ª–∏—Å—å –Ω–∞ —Å—á–µ—Ç
        Alert alert = switchTo().alert(); // –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –≤ –æ–∫–Ω–æ –∞–ª–µ—Ä—Ç–∞
        String alertText = alert.getText(); // —Å—á–∏—Ç–∞–ª–∏ –æ—Ç—Ç—É–¥–∞ —Ç–µ–∫—Å—Ç –∏ –∑–∞–ø–æ–º–Ω–∏–ª–∏ –µ–≥–æ
        assertThat(alertText).contains("‚ùå Please enter a valid amount."); // –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        alert.accept(); // –∑–∞–∫—Ä—ã–ª–∏ –æ–∫–Ω–æ –∞–ª–µ—Ä—Ç–∞

        // –®–ê–ì 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ api —á—Ç–æ –¥–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–∏–ª–∏—Å—å –Ω–∞ —Å—á–µ—Ç
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —é–∑–µ—Ä–∞
        AccountInfoResponse[] existingUserAccounts = given()
                .spec(RequestSpecs.authAsUserSpec(user.getUsername(), user.getPassword()))
                .get("http://localhost:4111/api/v1/customer/accounts")
                .then().assertThat()
                .extract().as(AccountInfoResponse[].class);

        AccountInfoResponse accountWithDeposit = existingUserAccounts[0]; // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
        Assertions.assertEquals(0, accountWithDeposit.getBalance(),"–ë–∞–ª–∞–Ω—Å –≤ API –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–º –≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞
    }
}
